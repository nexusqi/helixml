# ðŸŒ€ HelixML CUDA Docker Image
FROM nvidia/cuda:13.0.1-devel-ubuntu22.04

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    pkg-config \
    libssl-dev \
    git \
    && rm -rf /var/lib/apt/lists/*

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Set CUDA environment variables
ENV CUDA_HOME=/usr/local/cuda
ENV LD_LIBRARY_PATH=/usr/local/cuda/lib64:${LD_LIBRARY_PATH}
ENV PATH=/usr/local/cuda/bin:${PATH}

# Set working directory
WORKDIR /workspace

# Copy workspace files
COPY Cargo.toml Cargo.lock ./
COPY crates/ ./crates/
COPY lib/ ./lib/
COPY examples/ ./examples/
COPY configs/ ./configs/

# Build dependencies first (for better caching)
RUN cargo build --workspace --release --features cuda

# Copy source code
COPY . .

# Build the project with CUDA support
RUN cargo build --workspace --release --features cuda

# Create non-root user
RUN useradd -m -s /bin/bash helix
USER helix

# Set environment variables
ENV RUST_BACKTRACE=1
ENV CARGO_TARGET_DIR=/workspace/target

# Expose port for serving
EXPOSE 8080

# Default command
CMD ["cargo", "run", "--example", "cuda_example", "--features", "cuda"]
